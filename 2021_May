0503
1. failed to create cublas handle: CUBLAS_STATUS_NOT_INITIALIZED error
   error about memory allocation, use allow_growth=True (TF_FORCE_GPU_ALLOW_GROWTH=true)
   https://stackoverflow.com/questions/38303974/tensorflow-running-error-with-cublas
2. centernet related error
   https://stackoverflow.com/questions/63552169/some-python-objects-were-not-bound-to-checkpointed-values
   https://github.com/tensorflow/models/issues/8967
   check the type(classfication or detection or fine_tune)
   resnet didnt support detection
   
0504
1. pytorch retinanet, coco dataset 5 epoch training, batch size 6, legacy
Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.262
Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.431
Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.273
Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.124
Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.291
Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.380
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.260
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.421
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.471
Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.281
Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.525
Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.638

Epoch 4 :   0%| | 0/19715 [3:44:06<?, ?batch/s, classification_loss=0.278, loss=0.722, regression_loss=0.All input tensors must be on the same device. Received cpu and cuda:0691/19715 [3:44:06<00:16,  1.49it/s]
Epoch 4 :   0%| | 0/19715 [3:44:08<?, ?batch/s, classification_loss=0.331, loss=0.795, regression_loss=0.All input tensors must be on the same device. Received cpu and cuda:0694/19715 [3:44:08<00:13,  1.58it/s]
Epoch 4 :   0%| | 0/19715 [3:44:12<?, ?batch/s, classification_loss=0.301, loss=0.748, regression_loss=0.All input tensors must be on the same device. Received cpu and cuda:0700/19715 [3:44:12<00:09,  1.58it/s]
100%|████████████████████████████████████████████████████████████| 19715/19715 [3:44:22<00:00,  1.46it/s]
Epoch 4 :   0%| | 0/19715 [3:44:22<?, ?batch/s, classification_loss=0.21, loss=0.544, regression_loss=0.3


0507
1. pytorch retinanet, coco dataset 5 epoch training, batch size 6, modified(1 more block after FPN layer)
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.253
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.416
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.265
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.117
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.279
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.360
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.254
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.419
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.468
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.275
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.520
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.633
 Epoch 4 :   0%| | 0/19715 [3:52:17<?, ?batch/s, classification_loss=0.245, loss=0.71, regression_lAll input tensors must be on the same device. Received cpu and cuda:015 [3:52:17<01:11,  1.48it/s]
100%|█████████████████████████████████████████████████████| 19715/19715 [3:53:35<00:00,  1.41it/s]
Epoch 4 :   0%| | 0/19715 [3:53:35<?, ?batch/s, classification_loss=0.336, loss=0.8, regression_lo
Evaluating dataset

pytorch retinanet, coco dataset 5 epoch training, batch size 6, modified(1 more FPN is changed)
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.262
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.432
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.272
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.120
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.287
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.373
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.256
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.423
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.476
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.274
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.531
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.638

0510
to do
1. mobilenet, retinanet, etc code review and change.
   swin transformer code review
2. mobilnet backbone centernet evaluation


cenernet mobile backbone 30,0000 steps, batch_size=64
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.373
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.646
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.389
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.291
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.421
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.390
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.105
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.400
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.494
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.440
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.530
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.400

0512
to do
1. pytorch vision library , retinanet code 확인 후 
   mobilenet backbone으로 변경하기
2. centernen model 관련 전처리, config file의 feature extracter에 값을 넣을 수 있다. 없을 경우 mean, std(0, 1)이 channel 별로 들어간다.
   또한 tf.keras에서 image_util에서 preprocess를 한다. 127.5로 나누고 1을 빼준다.
3. mobile based centernet과 resnet based centernet이 preprocessing이 서로 다르다. 코드 확인 
   
to do list
1. 가상환경 gpu02가 아닌 hp에서 설정해야 하는지?? -> gpu02에서만 training이 된다. 
2. 검체 이상 유무 파악하는 것 ai model에 추가?
3. resnet101 backbone centernet fully test
4. scl data 전달 관련 server 접속 안되는 이슈.

0514
to do
1. customized learning rate scheduling per step
2. evaluation code
3. gradient checkpointing
4. multi gpu processing
5. adaptive gradient clipping
5. code refactoring pytorch retina, 여러번 반복할수록 코드가 깔끔해진다.

done
1. customized learning rate scheduling per step
   단순히 scheduler를 매 step마다 실행시키면 된다. 아니면 따로 만들어서 직접 optim의 learing rate을 변경해도 된다.
2. multi gpu processing
   model뿐 아니라 loss까지 multi gpu를 하려고 했으니 detection task에서 input 및 target이 여러개여서 실패함
   추후 distributed training으로 다시 시도해 보자
   
0521
pytorch retinanet, 640*640, resnet50 backbone, 2 class, batchsize 32, 120 epochs, final total loss : 0.446

total
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.223
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.366
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.256
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.089
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.225
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.630
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.086
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.253
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.322
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.228
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.318
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.709
 
 abnormal
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.422
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.683
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.495
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.142
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.431
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.630
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.167
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.475
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.605
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.396
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.612
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.709
 
 normal
  Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.024
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.049
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.018
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.035
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.018
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.005
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.031
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.039
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.060
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.024
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000
 
 retinanet 640 backbone resnet 50에서 전반적으로 결과가 좋지 않다.
 해상도를 320으로 낮추고, classification copy, regression no initialization으로 변경
 backbone을 bn을 제외하고 freezing
 gradient clipping 0.1 -> 0.02, learning rate가 크더라도 clipping으로 인해 작은 값이 변경되며
 윗단에서 bn이 없기에 clipping을 잘 해줘야 될 것 같다.

 0526
1. tensorflow object detection api
global batch_size 64 is not divisible by num_replicas_in_sync 3
multi gpu의 개수가 batch size로 나누어지지 않아서 생긴 문제
gpu 4개 할당 후 문제 없다.
resnet101 backbone centernet을 random crop augmentation을 주고 training 시작
