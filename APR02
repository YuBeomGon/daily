0410
1. hub.kerasLayer를 통해 pretrained bert or albert model을 keras에서 이용 가능하다. 그러나 trainable=True가 동작하지 않아서
   fine tunning이 불가하다. 
   custom class를 정의해야 한다.
   
2. keras 공부
3. super(class, self).__init__ python2에서 이렇게 한다.
4. __init__
   __call__ (여기서 build와 call을 부르도록 keras.layer(backend)에서 설정되어 있다.
   
0413
1. transformer 리뷰
2. einsum관련 체크
3. hub.keraslayer, tf.module관련 확인, hub.keraslayer(bert, trainable=True)가 되는 것 찾았으나 학습이 잘 안되는 것 같다.(tf 2.1 version에서)
   https://colab.research.google.com/drive/1UQ-76_hNyU6U2Emkw9qj-Cf1NUt0SPc_#scrollTo=XXYcDM53V05P&forceEdit=true&sandboxMode=true
   
4. hub.module로 로드하는 방법, 사전학습된 pretrained model로는 잘 되나, customized pretrained 또는 fine tune된 model로 load하는 방법 체크
   tf.estimator.saved_model을 이용하여 save를 하면 saved model이 만들어지나, load가 되지 않음, tfhub_module.hb도 있어야 될 것 같은데
   어떻게 생성??
   
0416
1. noise 추가
2. hub.module로 load하는 법 체크


0420
1. albert code reivew & add noise 완료, but memory를 많이 잡아 먹는다. (file size가 클때 2GB초과로 인해 에러 발생)
2. Keras + bert 완료(bert-for-tf2이용), 영어 리뷰 데이터에 대해 동작 확인
3. python 관련 공부

0421
1. tensorflow code 공부
2. dataset api관련 확인, batch별로 noise 추가 가능한지 확인(동작 x)

0422
1. keras에서 fine tunning은 동작하는 것을 확인, 그러나 pretrained model에서 weight loading하는 부분 구현 필요(naming check)

0423
1. Kmeans clustering (bert as a service, embedding as a service)
   문장을 벡터로 바꾼 후 클러스터링 수행
        Error: no centroid defined for empty cluster.
        Try setting argument 'avoid_empty_clusters' to True
   특정 클러스터에 하나도 포함이 안되서 에러 발생하는 것으로 보임, flag setting 후 미발생
   K means clustering의 경우 data 분포 및 밀도 및 군집의 크기가 다를 경우(클러스터당 개수) 잘 동작하지 않을 수 있다고 
   여러번 군집화를 하여 가장 빈번히 등장하는 군집에 할당하는 majority voting 방법 사용
   https://ratsgo.github.io/machine%20learning/2017/04/19/KC/
   
   군집화 수행 후 각 군집당 mean과 variance를 구하고 test data로 테스트 시 1, cosine similarity 2, l2 distance, 3 calculate prob(GA)
   군집에 맞게 텍스트 데이터 모아줄 필요 있다.(군집 label이 random하게 생성됨)
   4. 군집화 결과를 label로 이용 신경망 학습(stacked bi lstm)
   
   군집의 정확한 개수를 모르는 단점 존재함.
   매 테스트마다 군집의 label이 다르고 갯수도 다르다.
   repeats를 늘리면 결과가 조금 더 안정적으로 된다.
   
   

